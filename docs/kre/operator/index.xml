<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Konstellation â€“ Operator documentation</title><link>https://www.konstellation.io/docs/kre/operator/</link><description>Recent content in Operator documentation on Konstellation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://www.konstellation.io/docs/kre/operator/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: KAI Server Architecture</title><link>https://www.konstellation.io/docs/kre/operator/kais_architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.konstellation.io/docs/kre/operator/kais_architecture/</guid><description>
&lt;p>KAI Server runs inside a kubernetes cluster in a single namespace. All components for the KAI Server are deployed in the same namespace (&lt;code>kre&lt;/code> by default).&lt;/p>
&lt;h2 id="components">Components&lt;/h2>
&lt;figure>
&lt;img src="https://www.konstellation.io/docs/static/kais_architecture.jpg" width="1000px"/>
&lt;/figure>
&lt;p>The schema above shows the architecture inside KAI Server. It is a scalable and asynchronous architecture designed to seamless deploy process automation projects into production.&lt;/p>
&lt;h3 id="admin-api">Admin API&lt;/h3>
&lt;p>The Admin API is the central component of KAI Server. It is responsible for orchestrating all other components and executing user actions in the cluster.&lt;/p>
&lt;h3 id="admin-ui">Admin UI&lt;/h3>
&lt;p>This is the component that renders all the UI, where the users can interact with the Runtimes.&lt;/p>
&lt;h3 id="k8-manager">K8 Manager&lt;/h3>
&lt;p>This service exposes a gRPC service to encapsulate all Kubernetes related features and Prometheus queries to get metrics and alerts. The only service that is going to call this gRPC is the Admin API service when it&amp;rsquo;s needed to create new Kubernetes resources.&lt;/p>
&lt;h3 id="mongodb">MongoDB&lt;/h3>
&lt;p>This is the database where the Admin API stores all the objects needed to manage the server. Users, runtimes, versions, workflows and so on.&lt;/p>
&lt;h3 id="nats">NATs&lt;/h3>
&lt;p>NATs is the event broker that serves as the backbone of communications inside the Server. Nodes in Workflows make use of NATs to communicate with each other.&lt;/p>
&lt;h4 id="influxdb">InfluxDB&lt;/h4>
&lt;p>KAI Server also stores metrics, for this it is used an InfluxDB instance. All nodes can write any kind of metric anytime desired. By giving a measurement name, tags, fields and data as usage of Influx requires.&lt;/p>
&lt;h4 id="chronograf">Chronograf&lt;/h4>
&lt;p>Chronograf will display stored metrics in any form desired. For this &lt;em>Flux&lt;/em> queries are used within a given display format. These will display cells inside dashboards giving metrics meaning and context, valuable for analytics and supervision of projects.&lt;/p></description></item><item><title>Docs: Install KAI Server</title><link>https://www.konstellation.io/docs/kre/operator/installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.konstellation.io/docs/kre/operator/installation/</guid><description>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;ul>
&lt;li>Kubernetes 1.19+&lt;/li>
&lt;li>Nginx ingress controller. See &lt;a href="#ingress-controller">Ingress Controller&lt;/a>.&lt;/li>
&lt;li>Helm 3+&lt;/li>
&lt;/ul>
&lt;h2 id="install-chart">Install chart&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$&amp;gt; helm repo add konstellation-io https://charts.konstellation.io
$&amp;gt; helm repo update
$&amp;gt; helm install &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>RELEASE_NAME&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> konstellation-io/kre
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>See &lt;a href="https://helm.sh/docs/helm/helm_repo/">helm repo&lt;/a> and &lt;a href="https://helm.sh/docs/helm/helm_install/">helm install&lt;/a> for command documentation.&lt;/em>&lt;/p>
&lt;h2 id="dependencies">Dependencies&lt;/h2>
&lt;p>By default, this chart installs &lt;a href="https://github.com/influxdata/helm-charts/tree/master/charts/influxdb">InfluxDB&lt;/a> and &lt;a href="https://github.com/influxdata/helm-charts/tree/master/charts/kapacitor">Kapacitor&lt;/a> chart as dependencies.&lt;/p>
&lt;p>However, &lt;strong>Kapacitor&lt;/strong> is an optional dependency. To disable it during installation, set &lt;code>kapacitor.enabled&lt;/code> to &lt;code>false&lt;/code>.&lt;/p>
&lt;h2 id="uninstall-chart">Uninstall chart&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$&amp;gt; helm uninstall &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>RELEASE_NAME&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This removes all the Kubernetes components associated with the chart and deletes the release.&lt;/p>
&lt;p>&lt;em>See &lt;a href="https://helm.sh/docs/helm/helm_uninstall/">helm uninstall&lt;/a> for command documentation.&lt;/em>&lt;/p>
&lt;h2 id="upgrading-chart">Upgrading Chart&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$&amp;gt; helm upgrade &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>RELEASE_NAME&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> konstellation.io/kre
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>See &lt;a href="https://helm.sh/docs/helm/helm_upgrade/">helm upgrade&lt;/a> for command documentation.&lt;/em>&lt;/p>
&lt;h2 id="ingress-controller">Ingress controller&lt;/h2>
&lt;p>This Chart has been developed using &lt;strong>Nginx Ingress Controller&lt;/strong>. So using the default ingress annotations ensures its correct operation.&lt;/p>
&lt;p>&lt;em>See &lt;a href="https://github.com/konstellation-io/kre/blob/main/helm/kre/values.yaml">values.yaml&lt;/a> file and &lt;a href="https://kubernetes.github.io/ingress-nginx/">Nginx Ingress controller&lt;/a> for additional documentation&lt;/em>*.&lt;/p>
&lt;p>However, users could use any other ingress controller (for example, &lt;a href="https://doc.traefik.io/traefik/providers/kubernetes-ingress/">Traefik&lt;/a>). In that case, ingress configurations equivalent to the default ones must be provided.&lt;/p>
&lt;p>Keep in mind that even using equivalent ingress configurations the correct operation of the appliance is not guaranteed.&lt;/p></description></item><item><title>Docs: Customization</title><link>https://www.konstellation.io/docs/kre/operator/customization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.konstellation.io/docs/kre/operator/customization/</guid><description>
&lt;h2 id="about-customization">About customization&lt;/h2>
&lt;p>Helm chart parameters are configured via a &lt;code>values.yaml&lt;/code> file or the &lt;code>--set&lt;/code> option.&lt;/p>
&lt;p>It is possible to configure a lot of aspects of a KAI Server deployment, as depending on your environment and your use case the default values could not be enough. If that is the case, one or more custom &lt;code>values.yaml&lt;/code> files in conjunction with the &lt;code>--set&lt;/code> option can be used with these parameters to be applied when running Helm.&lt;/p>
&lt;h2 id="chart-values">Chart Values&lt;/h2>
&lt;p>Check &lt;a href="https://github.com/konstellation-io/kre/blob/main/helm/kre/CHART.md">here&lt;/a> for a complete list of chart values.&lt;/p></description></item></channel></rss>